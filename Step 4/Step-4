pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M3"
    }
    
    environment {
        dockerhub = credentials('dockerhubaccount')
    }

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/IASON-ZG/toDoAppWithLogin-Regeneration-CyberSecurity-DevOps.git'

                // Run Maven on a Unix agent.
                sh "mvn -Dmaven.test.failure.ignore=true clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    // junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
        stage('Docker Build') {
            steps {
      	        sh 'docker build -t iaziogas/app:latest .'
            }
        }
        stage('Publish Docker image'){
            steps{
                // sh 'docker tag app:latest iaziogas/app:latest '
                sh 'echo $dockerhub_PSW | docker login -u $dockerhub_USR --password-stdin'
                sh 'docker push iaziogas/app:latest'
            }
        }
        stage('Triger Step 6'){
            steps{
                build 'Step-6'
            }
        }
    }
}
